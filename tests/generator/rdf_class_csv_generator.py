import pandas as pd
import keyword
from pathlib import Path
import csv

def python_type_from_dtype(dtype):
    if pd.api.types.is_integer_dtype(dtype):
        return "int"
    elif pd.api.types.is_float_dtype(dtype):
        return "float"
    elif pd.api.types.is_bool_dtype(dtype):
        return "bool"
    elif pd.api.types.is_datetime64_any_dtype(dtype):
        return "datetime.datetime"
    else:
        return "str"

def sanitize_identifier(name):
    name = name.strip().replace(" ", "_").replace("-", "_")
    if not name.isidentifier() or keyword.iskeyword(name):
        name = f"{name}_field"
    return name

def generate_class(df: pd.DataFrame, class_name: str = "AutoGeneratedClass", namespace_prefix: str = "EX", uri: str="https://dadosabertos.br/dataset#") -> str:
    lines = [
            "from rdflib import Namespace",
            "from rdf_mapper.rdf_mapper import RDFMapper",
            "from rdf_mapper.rdf_repository import RDFRepository",
            "from rdflib import Graph",
            "",
            
            f'EX = Namespace("{uri}")',
            'rdf_mapper = RDFMapper()',
            "",
            f"@rdf_mapper.rdf_entity({namespace_prefix}.{class_name})"
        ]
    lines.append(f"class {class_name}:")
    lines.append("    def __init__(self, " + ", ".join([sanitize_identifier(col) for col in df.columns]) + "):")

    for col in df.columns:
        var_name = sanitize_identifier(col)
        dtype = python_type_from_dtype(df[col].dtype)
        lines.append(f"        self._{var_name}: {dtype} = {var_name}")
    
    lines.append("")  # linha em branco

    for col in df.columns:
        var_name = sanitize_identifier(col)
        lines.append(f"    @rdf_mapper.rdf_property({namespace_prefix}.{var_name})")
        lines.append(f"    def {var_name}(self):")
        lines.append(f"        return self._{var_name}")
        lines.append("")  

    return "\n".join(lines)

def main():
    input_csv = "Pre√ßos semestrais - AUTOMOTIVOS_2024.02.csv"
    output_file = "combustiveis.py"
    class_name = "Combustiveis"
    namespace_prefix = "EX"

    df = pd.read_csv(input_csv,
                          sep=';',
        usecols=lambda c: not c.startswith('Unnamed'),
        quoting=csv.QUOTE_NONE,
        on_bad_lines='warn'
    )


    print("Gerando classe com as seguintes colunas: " + df.columns)

    class_code = generate_class(df, class_name, namespace_prefix)

    Path(output_file).write_text(class_code, encoding='utf-8')
    print(f"Classe gerada com sucesso no arquivo '{output_file}'.")

if __name__ == "__main__":
    main()
